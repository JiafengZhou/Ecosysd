#!/bin/bash

export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"

NAME="ecosysd"
USER="ecosysnet"
GROUP="ecosysnet"
MAINPATH="/home/ecosysnet/build"

PIDFILE=$MAINPATH/${NAME}.pid
DAEMON=$MAINPATH/$NAME
DAEMON_OPTS="--conf $MAINPATH/ecosysd.cfg"
NET_OPTS="-q --net $DAEMON_OPTS"

do_start()
{
	while [[ 1 ]]
	do
		procnum=`ps -ef | grep "$DAEMON $NET_OPTS" | grep -v "grep" | wc -l`
		if [[ $procnum -eq 0 ]]
		then
			echo "Starting daemon $NAME"
			start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE --chuid $USER:$GROUP --verbose --exec $DAEMON -- $NET_OPTS
			echo "Waiting 5 seconds to start daemon $NAME"
			sleep 5s
		else
			echo "Started daemon $NAME"
			break
		fi
	done
}

do_stop()
{
	while [[ 1 ]]
	do
		procnum=`ps -ef | grep "$DAEMON $NET_OPTS" | grep -v "grep" | wc -l`
		if [[ $procnum -eq 0 ]]
		then
			echo "Stopped daemon $NAME"
			break
		else
			echo "Stopping daemon $NAME"
			$DAEMON $DAEMON_OPTS stop
			echo "Waiting 5 seconds to stop daemon $NAME"
			sleep 5s
		fi
	done
}

do_status()
{
	if [[ -f "$PIDFILE" ]]
	then
		procnum=`ps -ef | grep "$DAEMON $NET_OPTS" | grep -v "grep" | wc -l`
		if [[ $procnum -eq 0 ]]
		then
			echo "$NAME is not running"
		else
			echo -n "PID of $NAME: "
			cat $PIDFILE
			$DAEMON $DAEMON_OPTS server_info
		fi
	else
		echo "$NAME is not running"
	fi
}

do_fetch()
{
	echo "$NAME ledger fetching info:"
	$DAEMON $DAEMON_OPTS fetch_info
}

do_uptime()
{
	$DAEMON $DAEMON_OPTS get_counts
}

do_command()
{
	shift
	$DAEMON $DAEMON_OPTS "$@"
}

do_test()
{
	$DAEMON $DAEMON_OPTS ping
}

do_chk()
{
	if [[ -f "$PIDFILE" ]]
	then
		procnum=`ps -ef | grep "$DAEMON $NET_OPTS" | grep -v "grep" | wc -l`
		if [[ $procnum -eq 0 ]]
		then
			return 1
		else
			$DAEMON $DAEMON_OPTS server_info > /dev/null 2>&1
			return $?
		fi
	else
		return 1
	fi
}

case "$1" in
	start)
		do_start
		;;
	stop)
		do_stop
		;;
	restart)
		do_stop
		do_start
		;;
	status)
		do_status
		;;
	fetch)
		do_fetch
		;;
	uptime)
		do_uptime
		;;
	command)
		do_command
		;;
	test)
		do_test
		;;
	chk)
		do_chk
		;;
	*)
		echo "Usage: $0 {start|stop|restart|status|fetch|uptime|command|test|chk}"
esac

